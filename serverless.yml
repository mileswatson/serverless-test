
# name of the service
service: backend

# locks service to only deploy with Serverless V2
frameworkVersion: '2'


plugins:
  # allows for HTTP API throttling
  - serverless-apigateway-route-settings
custom:
  # default settings for all API paths
  routeSettings:
    # max 10 requests a second
    rateLimit: 10
    # max 5 requests at a time
    burstLimit: 5
    # enabling this costs money
    detailedMetricsEnabled: false


# specifies the cloud provider
provider:

  # use AWS (as opposed to google, azure etc.)
  name: aws

  # default stage is 'dev', but can be overriden with the --stage option
  stage: ${opt:stage, 'dev'}
  # default region is London
  region: eu-west-2

  # .NET 5 requires a container image, sticking to 3.1 for now
  runtime: dotnetcore3.1
  # allocate 128 MB to each function
  memorySize: 128
  # set a timeout of 1 second
  timeout: 1

  # removes deprecation warning
  lambdaHashingVersion: 20201221

  httpApi:
    # e.g. dev-backend
    name: ${self:provider.stage}-${self:service}
    # supports better request / response datatypes
    payload: '2.0'


package:
  # we are using a compiled language, so we have to package the binary
  # with all function deployments
  artifact: LambdaFunctions/bin/Release/netcoreapp3.1/hello.zip


functions:

  # basic lambda function
  hello:

    # prefix the name with the stage, to help distinguish between stages.
    name: ${self:provider.stage}-hello
    # <assembly_name>::<namespace>.<class>::<function>
    handler: LambdaFunctions::LambdaFunctions.Handler::Hello

    events:
      # create an api that calls the function
      - httpApi:
          path: /test
          method: GET
